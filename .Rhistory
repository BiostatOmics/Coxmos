X.clinical[startsWith(X.clinical$ajcc_pathologic_n, "N3") & !is.na(X.clinical$ajcc_pathologic_n),]$ajcc_pathologic_n <- "N3"
X.clinical$ajcc_pathologic_n <- factor(X.clinical$ajcc_pathologic_n, levels = c("N0","N1","N2","N3","NX"))
#ajcc_pathologic_m
X.clinical$ajcc_pathologic_m <- as.character(X.clinical$ajcc_pathologic_m)
X.clinical[startsWith(X.clinical$ajcc_pathologic_m, "cM0 (i+)") & !is.na(X.clinical$ajcc_pathologic_m),]$ajcc_pathologic_m <- "M0"
X.clinical$ajcc_pathologic_m <- factor(X.clinical$ajcc_pathologic_m, levels = c("M0","M1","MX"))
#primary_diagnosis
X.clinical$race <- as.character(X.clinical$race)
X.clinical[!X.clinical$race %in% c("white", "black or african american", "not reported") & !is.na(X.clinical$race),]$race <- "Other"
X.clinical$race <- factor(X.clinical$race, levels = c("white", "black or african american", "not reported", "Other"))
#treatment_type
X.clinical[X.clinical$treatment_type %in% "" & !is.na(X.clinical$treatment_type),]$treatment_type <- "not reported"
X.clinical$treatment_type <- factor(X.clinical$treatment_type, levels = c("Radiation Therapy, NOS, Pharmaceutical Therapy, NOS","Pharmaceutical Therapy, NOS, Radiation Therapy, NOS","not reported"))
#treatment_or_therapy
X.clinical$treatment_or_therapy <- as.character(X.clinical$treatment_or_therapy)
X.clinical[startsWith(X.clinical$treatment_or_therapy, "not reported") & !is.na(X.clinical$treatment_or_therapy),]$treatment_or_therapy <- "not reported"
X.clinical[startsWith(X.clinical$treatment_or_therapy, "yes, not reported") & !is.na(X.clinical$treatment_or_therapy),]$treatment_or_therapy <- "not reported"
X.clinical$treatment_or_therapy <- factor(X.clinical$treatment_or_therapy, levels = c("no, no", "no, yes", "yes, no", "yes, yes", "not reported"))
#oct_embedded
X.clinical$oct_embedded <- ifelse(X.clinical$oct_embedded=="true", T, F)
#prior_malignancy
X.clinical$prior_malignancy <- ifelse(X.clinical$prior_malignancy=="no", "No", ifelse(X.clinical$prior_malignancy=="yes", "Yes", "Not Reported"))
for(cn in colnames(X.clinical)){
if(class(X.clinical[,cn]) %in% c("character", "logical")){
X.clinical[,cn] <- factor(X.clinical[,cn])
}else if(class(X.clinical[,cn])=="integer"){
X.clinical[,cn] <- as.numeric(X.clinical[,cn])
}
# NZV
X.clinical <- as.data.frame(X.clinical)
X.clinical.indexProblems <- caret::nzv(x = X.clinical, saveMetrics = T, freqCut = 95/5)
vars_zv <- rownames(X.clinical.indexProblems)[which(X.clinical.indexProblems$zeroVar==T)]
vars_nzv <- rownames(X.clinical.indexProblems)[which(X.clinical.indexProblems$nzv==T)]
toCheck <- vars_nzv[!vars_nzv %in% vars_zv]
toKeep <- c("gender")
length(c(vars_zv, toCheck[!toCheck %in% toKeep]))
#delete ZV and NZV not in toKeep
X.clinical <- X.clinical[,!colnames(X.clinical) %in% c(vars_zv, toCheck[!toCheck %in% toKeep]),drop=F]
#check oct_embedded, synchronous_malignancy
#comb ajcc_pathologic_stage
#comb days_to_last_follow_up + days_to_death
#"primary_diagnosis" - to spread
colnames(X.clinical)
#time/event
event <- ifelse(X.clinical$vital_status=="Dead", T, F)
time <- ifelse(!is.na(X.clinical$days_to_death), X.clinical$days_to_death, X.clinical$days_to_last_follow_up)
X.clinical$days_to_death <- NULL
X.clinical$days_to_last_follow_up <- NULL
X.clinical$vital_status <- NULL
#delete ZV and NZV not in toKeep
X.clinical <- X.clinical[,!colnames(X.clinical) %in% c(vars_zv, toCheck[!toCheck %in% toKeep]),drop=F]
var.toKeep <- c("days_to_collection",
"initial_weight",
#"oct_embedded", #preparacion del tejido
#"synchronous_malignancy", == prior_malignancy #[only no and not reported]
"ajcc_pathologic_stage", #stage
"age_at_diagnosis",
"primary_diagnosis",
"prior_malignancy",
"year_of_diagnosis",
"ajcc_staging_system_edition",
"ajcc_pathologic_t",
"ajcc_pathologic_n",
"ajcc_pathologic_m",
"race",
"gender",
"ethnicity",
"age_at_index",
#"days_to_birth",
"year_of_birth",
#"year_of_death",
"treatment_type",
"treatment_or_therapy")
X.clinical <- X.clinical[,colnames(X.clinical) %in% var.toKeep, drop=F]
Y.ori <- data.frame(time = time, event = event)
rownames(Y.ori) <- rownames(X.clinical)
#delete negative times
which_negativeTime_names <- rownames(X.clinical)[which(Y.ori$time<0)]
which_NA_Y_names <- rownames(X.clinical)[unique(c(which(is.na(Y.ori$time)), which(is.na(Y.ori$event))))]
Y.ori <- Y.ori[!rownames(Y.ori) %in% c(which_negativeTime_names, which_NA_Y_names),]
#mv
any(is.na(Y.ori))
which_duplicate_names <- rownames(X.clinical)[which(duplicated(X.clinical))]
which_duplicate_names
#Eliminar pacientes control
X.clinical <- X.clinical[!rownames(X.clinical) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
X.genes <- X.genes[!rownames(X.genes) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
X.mirna <- X.mirna[!rownames(X.mirna) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
X.prot <- X.prot[!rownames(X.prot) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
X.methyl <- X.methyl[!rownames(X.methyl) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
Y.ori <- Y.ori[!rownames(Y.ori) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
if(any(is.na(X.clinical))){
X <- X.clinical
X <- X[rownames(X) %in% rownames(Y.ori),]
colNA <- colSums(is.na(X.clinical))
index_colNA <- which(colNA>5)
X <- X[,-index_colNA]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.clinical <- aux$filtered_data
}
dim(X.clinical)
if(any(is.na(X.genes))){
X <- X.genes
X <- X[rownames(X) %in% rownames(Y.ori),]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.genes <- aux$filtered_data
}
if(any(is.na(X.mirna))){
X <- X.mirna
X <- X[rownames(X) %in% rownames(Y.ori),]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.mirna <- aux$filtered_data
}
if(any(is.na(X.prot))){
X <- X.prot
X <- X[rownames(X) %in% rownames(Y.ori),]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.prot <- aux$filtered_data
}
if(any(is.na(X.methyl))){
X <- X.methyl
X <- X[rownames(X) %in% rownames(Y.ori),]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.methyl <- aux$filtered_data
}
Y.clinical <- Y.ori[rownames(Y.ori) %in% rownames(X.clinical),]
Y.genes <- Y.ori[rownames(Y.ori) %in% rownames(X.genes),]
Y.mirna <- Y.ori[rownames(Y.ori) %in%  rownames(X.mirna),]
Y.methyl <- Y.ori[rownames(Y.ori) %in% rownames(X.methyl),]
Y.prot <- Y.ori[rownames(Y.ori) %in% rownames(X.prot),]
X.clinical <- X.clinical[rownames(Y.clinical),]
X.genes <- X.genes[rownames(Y.genes),]
X.mirna <- X.mirna[rownames(Y.mirna),]
X.methyl <- X.methyl[rownames(Y.methyl),]
X.prot <- X.prot[rownames(Y.prot),]
X.clinical[1:5]
X.clinical[1:5,]
X.clinical <- rna@colData
#X.genes <- rna.filt.counts
X.genes <- rna.norm$y + rna.norm$offset
X.mirna <- mirna.filt.counts
X.prot <- prot
X.methyl <- mval
#observations in rows
X.clinical <- X.clinical
X.genes <- t(X.genes)
X.mirna <- as.data.frame(t(X.mirna))
X.prot <- t(X.prot)
X.methyl <- t(X.methyl)
#### ### ### ###
# FIX ROWNAMES #
#### ### ### ###
rn.X.clinical <-unlist(lapply(rownames(X.clinical), function(x){paste0(strsplit(x, split = "-")[[1]][1:4], collapse = "-")}))
rn.X.genes <-unlist(lapply(rownames(X.genes), function(x){paste0(strsplit(x, split = "-")[[1]][1:4], collapse = "-")}))
rn.X.mirna <-unlist(lapply(rownames(X.mirna), function(x){paste0(strsplit(x, split = "-")[[1]][1:4], collapse = "-")}))
rn.X.prot <-unlist(lapply(rownames(X.prot), function(x){paste0(strsplit(x, split = "-")[[1]][1:4], collapse = "-")}))
rn.X.methyl <-unlist(lapply(rownames(X.methyl), function(x){paste0(strsplit(x, split = "-")[[1]][1:4], collapse = "-")}))
rownames(X.clinical) <- rn.X.clinical
rownames(X.genes) <- rn.X.genes
rownames(X.mirna) <- rn.X.mirna
rownames(X.prot) <- rn.X.prot
rownames(X.methyl) <- rn.X.methyl
#### ### ### ### ### ###
# X.clinical selection #
#### ### ### ### ### ###
lst_vars <- c("treatments", "disease_type", "primary_site")
var_treatments <- X.clinical$treatments
X.clinical$treatments <- NULL
var_primary_site <- X.clinical$primary_site
X.clinical$primary_site <- NULL
var_disease_type <- X.clinical$disease_type
X.clinical$disease_type <- NULL
#save list variables
treatment_type <- NULL
treatment_or_therapy <- NULL
primary_site <- NULL
disease_type <- NULL
#created_datetime <- NULL
for(p in 1:length(var_treatments)){
treatment_type <- c(treatment_type, paste0(var_treatments[[p]]$treatment_type, collapse = ", "))
treatment_or_therapy <- c(treatment_or_therapy, paste0(var_treatments[[p]]$treatment_or_therapy, collapse = ", "))
primary_site <- c(primary_site, paste0(var_primary_site[[p]], collapse = ", "))
disease_type <- c(disease_type, paste0(var_disease_type[[p]], collapse = ", "))
# t.val <- tr[[1]]$created_datetime[!is.na(tr[[1]]$created_datetime)]
# if(length(t.val)==0){t.val = NA}
#created_datetime <- c(created_datetime, as.Date(t.val))
}
X.clinical$treatment_type <- treatment_type
X.clinical$treatment_or_therapy <- treatment_or_therapy
X.clinical$primary_site <- primary_site
X.clinical$disease_type <- disease_type
#X.clinical$created_datetime <- created_datetime
#X.clinical$treatments <- NULL
#deleting non-tumoral samples
which_notumor <- which(X.clinical$sample_type=="Solid Tissue Normal") #deleting 76
which_notumor_names <- rownames(X.clinical)[which_notumor]
X.clinical <- X.clinical[-which_notumor,]
X.clinical$sample_type <- NULL
#ajcc_pathologic_stage
X.clinical$ajcc_pathologic_stage <- as.character(X.clinical$ajcc_pathologic_stage)
X.clinical[startsWith(X.clinical$ajcc_pathologic_stage, "Stage III") & !is.na(X.clinical$ajcc_pathologic_stage),]$ajcc_pathologic_stage <- "Stage III"
X.clinical[startsWith(X.clinical$ajcc_pathologic_stage, "Stage IIA") & !is.na(X.clinical$ajcc_pathologic_stage),]$ajcc_pathologic_stage <- "Stage II"
X.clinical[startsWith(X.clinical$ajcc_pathologic_stage, "Stage IIB") & !is.na(X.clinical$ajcc_pathologic_stage),]$ajcc_pathologic_stage <- "Stage II"
X.clinical[startsWith(X.clinical$ajcc_pathologic_stage, "Stage IA") & !is.na(X.clinical$ajcc_pathologic_stage),]$ajcc_pathologic_stage <- "Stage I"
X.clinical[startsWith(X.clinical$ajcc_pathologic_stage, "Stage IB") & !is.na(X.clinical$ajcc_pathologic_stage),]$ajcc_pathologic_stage <- "Stage I"
X.clinical$ajcc_pathologic_stage <- factor(X.clinical$ajcc_pathologic_stage, levels = c("Stage I","Stage II","Stage III","Stage IV","Stage X"))
#primary_diagnosis
X.clinical$primary_diagnosis <- as.character(X.clinical$primary_diagnosis)
X.clinical[!X.clinical$primary_diagnosis %in% c("Infiltrating duct carcinoma, NOS", "Lobular carcinoma, NOS") & !is.na(X.clinical$primary_diagnosis),]$primary_diagnosis <- "Other"
X.clinical$primary_diagnosis <- factor(X.clinical$primary_diagnosis, levels = c("Infiltrating duct carcinoma, NOS","Lobular carcinoma, NOS","Other"))
#ajcc_pathologic_t
X.clinical$ajcc_pathologic_t <- as.character(X.clinical$ajcc_pathologic_t)
X.clinical[startsWith(X.clinical$ajcc_pathologic_t, "T1") & !is.na(X.clinical$ajcc_pathologic_t),]$ajcc_pathologic_t <- "T1"
X.clinical[startsWith(X.clinical$ajcc_pathologic_t, "T2") & !is.na(X.clinical$ajcc_pathologic_t),]$ajcc_pathologic_t <- "T2"
X.clinical[startsWith(X.clinical$ajcc_pathologic_t, "T3") & !is.na(X.clinical$ajcc_pathologic_t),]$ajcc_pathologic_t <- "T3"
X.clinical[startsWith(X.clinical$ajcc_pathologic_t, "T4") & !is.na(X.clinical$ajcc_pathologic_t),]$ajcc_pathologic_t <- "T4"
X.clinical$ajcc_pathologic_t <- factor(X.clinical$ajcc_pathologic_t, levels = c("T1","T2","T3","T4","TX"))
#deleting morphology
X.clinical$morphology <- NULL
#ajcc_pathologic_n
X.clinical$ajcc_pathologic_n <- as.character(X.clinical$ajcc_pathologic_n)
X.clinical[startsWith(X.clinical$ajcc_pathologic_n, "N0") & !is.na(X.clinical$ajcc_pathologic_n),]$ajcc_pathologic_n <- "N0"
X.clinical[startsWith(X.clinical$ajcc_pathologic_n, "N1") & !is.na(X.clinical$ajcc_pathologic_n),]$ajcc_pathologic_n <- "N1"
X.clinical[startsWith(X.clinical$ajcc_pathologic_n, "N2") & !is.na(X.clinical$ajcc_pathologic_n),]$ajcc_pathologic_n <- "N2"
X.clinical[startsWith(X.clinical$ajcc_pathologic_n, "N3") & !is.na(X.clinical$ajcc_pathologic_n),]$ajcc_pathologic_n <- "N3"
X.clinical$ajcc_pathologic_n <- factor(X.clinical$ajcc_pathologic_n, levels = c("N0","N1","N2","N3","NX"))
#ajcc_pathologic_m
X.clinical$ajcc_pathologic_m <- as.character(X.clinical$ajcc_pathologic_m)
X.clinical[startsWith(X.clinical$ajcc_pathologic_m, "cM0 (i+)") & !is.na(X.clinical$ajcc_pathologic_m),]$ajcc_pathologic_m <- "M0"
X.clinical$ajcc_pathologic_m <- factor(X.clinical$ajcc_pathologic_m, levels = c("M0","M1","MX"))
#primary_diagnosis
X.clinical$race <- as.character(X.clinical$race)
X.clinical[!X.clinical$race %in% c("white", "black or african american", "not reported") & !is.na(X.clinical$race),]$race <- "Other"
X.clinical$race <- factor(X.clinical$race, levels = c("white", "black or african american", "not reported", "Other"))
#treatment_type
X.clinical[X.clinical$treatment_type %in% "" & !is.na(X.clinical$treatment_type),]$treatment_type <- "not reported"
X.clinical$treatment_type <- factor(X.clinical$treatment_type, levels = c("Radiation Therapy, NOS, Pharmaceutical Therapy, NOS","Pharmaceutical Therapy, NOS, Radiation Therapy, NOS","not reported"))
#treatment_or_therapy
X.clinical$treatment_or_therapy <- as.character(X.clinical$treatment_or_therapy)
X.clinical[startsWith(X.clinical$treatment_or_therapy, "not reported") & !is.na(X.clinical$treatment_or_therapy),]$treatment_or_therapy <- "not reported"
X.clinical[startsWith(X.clinical$treatment_or_therapy, "yes, not reported") & !is.na(X.clinical$treatment_or_therapy),]$treatment_or_therapy <- "not reported"
X.clinical$treatment_or_therapy <- factor(X.clinical$treatment_or_therapy, levels = c("no, no", "no, yes", "yes, no", "yes, yes", "not reported"))
#oct_embedded
X.clinical$oct_embedded <- ifelse(X.clinical$oct_embedded=="true", T, F)
#prior_malignancy
X.clinical$prior_malignancy <- ifelse(X.clinical$prior_malignancy=="no", "no", ifelse(X.clinical$prior_malignancy=="yes", "yes", "not reported"))
for(cn in colnames(X.clinical)){
if(class(X.clinical[,cn]) %in% c("character", "logical")){
X.clinical[,cn] <- factor(X.clinical[,cn])
}else if(class(X.clinical[,cn])=="integer"){
X.clinical[,cn] <- as.numeric(X.clinical[,cn])
}
# NZV
X.clinical <- as.data.frame(X.clinical)
X.clinical.indexProblems <- caret::nzv(x = X.clinical, saveMetrics = T, freqCut = 95/5)
vars_zv <- rownames(X.clinical.indexProblems)[which(X.clinical.indexProblems$zeroVar==T)]
vars_nzv <- rownames(X.clinical.indexProblems)[which(X.clinical.indexProblems$nzv==T)]
toCheck <- vars_nzv[!vars_nzv %in% vars_zv]
toKeep <- c("gender")
length(c(vars_zv, toCheck[!toCheck %in% toKeep]))
#### ### ### ### ### ###
# X.clinical TIME/EVENT #
#### ### ### ### ### ###
#time/event
event <- ifelse(X.clinical$vital_status=="Dead", T, F)
time <- ifelse(!is.na(X.clinical$days_to_death), X.clinical$days_to_death, X.clinical$days_to_last_follow_up)
X.clinical$days_to_death <- NULL
X.clinical$days_to_last_follow_up <- NULL
X.clinical$vital_status <- NULL
#delete ZV and NZV not in toKeep
X.clinical <- X.clinical[,!colnames(X.clinical) %in% c(vars_zv, toCheck[!toCheck %in% toKeep]),drop=F]
#check oct_embedded, synchronous_malignancy
#comb ajcc_pathologic_stage
#comb days_to_last_follow_up + days_to_death
#"primary_diagnosis" - to spread
var.toKeep <- c("days_to_collection",
"initial_weight",
#"oct_embedded", #preparacion del tejido
#"synchronous_malignancy", == prior_malignancy #[only no and not reported]
"ajcc_pathologic_stage", #stage
"age_at_diagnosis",
"primary_diagnosis",
"prior_malignancy",
"year_of_diagnosis",
"ajcc_staging_system_edition",
"ajcc_pathologic_t",
"ajcc_pathologic_n",
"ajcc_pathologic_m",
"race",
"gender",
"ethnicity",
"age_at_index",
#"days_to_birth",
"year_of_birth",
#"year_of_death",
"treatment_type",
"treatment_or_therapy")
X.clinical <- X.clinical[,colnames(X.clinical) %in% var.toKeep, drop=F]
#gender
# which_male <- which(X.clinical$gender=="male") #deleting 9 males
# which_male_names <- rownames(X.clinical)[which_male]
# X.clinical <- X.clinical[-which_male,]
# X.clinical$gender <- NULL
#ajcc_pathologic_stage
# X.clinical[which(X.clinical$ajcc_pathologic_stage == "Stage IA"),]$ajcc_pathologic_stage <- "Stage I"
# X.clinical[which(X.clinical$ajcc_pathologic_stage == "Stage IB"),]$ajcc_pathologic_stage <- "Stage I"
#
# X.clinical[which(X.clinical$ajcc_pathologic_stage == "Stage IIA"),]$ajcc_pathologic_stage <- "Stage II"
# X.clinical[which(X.clinical$ajcc_pathologic_stage == "Stage IIB"),]$ajcc_pathologic_stage <- "Stage II"
#
# X.clinical[which(X.clinical$ajcc_pathologic_stage == "Stage IIIA"),]$ajcc_pathologic_stage <- "Stage III"
# X.clinical[which(X.clinical$ajcc_pathologic_stage == "Stage IIIB"),]$ajcc_pathologic_stage <- "Stage III"
# X.clinical[which(X.clinical$ajcc_pathologic_stage == "Stage IIIC"),]$ajcc_pathologic_stage <- "Stage III"
#####
# Y #
#####
Y.ori <- data.frame(time = time, event = event)
rownames(Y.ori) <- rownames(X.clinical)
#delete negative times
which_negativeTime_names <- rownames(X.clinical)[which(Y.ori$time<0)]
which_NA_Y_names <- rownames(X.clinical)[unique(c(which(is.na(Y.ori$time)), which(is.na(Y.ori$event))))]
Y.ori <- Y.ori[!rownames(Y.ori) %in% c(which_negativeTime_names, which_NA_Y_names),]
#mv
any(is.na(Y.ori))
###########
# OTRAS X #
###########
##############
# DUPLICATES #
##############
which_duplicate_names <- rownames(X.clinical)[which(duplicated(X.clinical))]
# which_duplicate_names <- rownames(Y.ori)[which(duplicated(Y.ori))]
# which_duplicate_names <- rownames(X.genes)[which(duplicated(X.genes))]
# which_duplicate_names <- rownames(X.mirna)[which(duplicated(X.mirna))]
# which_duplicate_names <- rownames(X.prot)[which(duplicated(X.prot))]
# which_duplicate_names <- rownames(X.methyl)[which(duplicated(X.methyl))]
#Eliminar pacientes control
X.clinical <- X.clinical[!rownames(X.clinical) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
X.genes <- X.genes[!rownames(X.genes) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
X.mirna <- X.mirna[!rownames(X.mirna) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
X.prot <- X.prot[!rownames(X.prot) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
X.methyl <- X.methyl[!rownames(X.methyl) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
Y.ori <- Y.ori[!rownames(Y.ori) %in% c(which_notumor_names, which_negativeTime_names, which_NA_Y_names, which_duplicate_names),]
# 0 variables to remove by nzv
# # NZV - GENES
# X.genes.indexProblems <- caret::nzv(x = X.genes, saveMetrics = T, freqCut = 95/5)
# vars_nzv <- rownames(X.genes.indexProblems)[which(X.genes.indexProblems$nzv==T)]
# length(vars_nzv)
# # delete NZV
# if(length(vars_nzv)){
#   X.genes <- X.genes[,!colnames(X.genes) %in% c(vars_zv, toCheck[!toCheck %in% toKeep]),drop=F]
# }
#
# # NZV - miRNA
# X.mirna.indexProblems <- caret::nzv(x = X.mirna, saveMetrics = T, freqCut = 95/5)
# vars_nzv <- rownames(X.mirna.indexProblems)[which(X.mirna.indexProblems$nzv==T)]
# length(vars_nzv)
# # delete NZV
# if(length(vars_nzv)){
#   X.mirna <- X.mirna[,!colnames(X.mirna) %in% c(vars_zv, toCheck[!toCheck %in% toKeep]),drop=F]
# }
#
# # NZV - prot
# X.prot.indexProblems <- caret::nzv(x = X.prot, saveMetrics = T, freqCut = 95/5)
# vars_nzv <- rownames(X.prot.indexProblems)[which(X.prot.indexProblems$nzv==T)]
# length(vars_nzv)
# # delete NZV
# if(length(vars_nzv)){
#   X.prot <- X.prot[,!colnames(X.prot) %in% c(vars_zv, toCheck[!toCheck %in% toKeep]),drop=F]
# }
#
# # NZV - methyl
# X.methyl.indexProblems <- caret::nzv(x = X.methyl, saveMetrics = T, freqCut = 95/5)
# vars_nzv <- rownames(X.methyl.indexProblems)[which(X.methyl.indexProblems$nzv==T)]
# length(vars_nzv)
# # delete NZV
# if(length(vars_nzv)){
#   X.methyl <- X.methyl[,!colnames(X.methyl) %in% c(vars_zv, toCheck[!toCheck %in% toKeep]),drop=F]
# }
#####
# X #
#####
# if(any(is.na(X.clinical))){
#   X <- X.clinical
#   X <- X[rownames(X) %in% rownames(Y.ori),]
#
#   colSums(is.na(X.clinical))
#
#   aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
#   aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
#
#   X.clinical <- aux$filtered_data
# }
if(any(is.na(X.clinical))){
X <- X.clinical
X <- X[rownames(X) %in% rownames(Y.ori),]
colNA <- colSums(is.na(X.clinical))
index_colNA <- which(colNA>5)
X <- X[,-index_colNA]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.clinical <- aux$filtered_data
}
if(any(is.na(X.genes))){
X <- X.genes
X <- X[rownames(X) %in% rownames(Y.ori),]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.genes <- aux$filtered_data
}
if(any(is.na(X.mirna))){
X <- X.mirna
X <- X[rownames(X) %in% rownames(Y.ori),]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.mirna <- aux$filtered_data
}
if(any(is.na(X.prot))){
X <- X.prot
X <- X[rownames(X) %in% rownames(Y.ori),]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.prot <- aux$filtered_data
}
if(any(is.na(X.methyl))){
X <- X.methyl
X <- X[rownames(X) %in% rownames(Y.ori),]
aux <- delete_PATorVAR(data = X, VAL_NAMAX = 0.1, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = F, ONLY_VAR = T, verbose = F)
aux <- delete_PATorVAR(data = aux$filtered_data, VAL_NAMAX = 0, VAR_NA_KEEP = NULL, MIN_N_PAT = 50, ONLY_PAT = T, ONLY_VAR = F, verbose = F)
X.methyl <- aux$filtered_data
}
#####
# Y #
#####
Y.clinical <- Y.ori[rownames(Y.ori) %in% rownames(X.clinical),]
Y.genes <- Y.ori[rownames(Y.ori) %in% rownames(X.genes),]
Y.mirna <- Y.ori[rownames(Y.ori) %in%  rownames(X.mirna),]
Y.methyl <- Y.ori[rownames(Y.ori) %in% rownames(X.methyl),]
Y.prot <- Y.ori[rownames(Y.ori) %in% rownames(X.prot),]
X.clinical <- X.clinical[rownames(Y.clinical),]
X.genes <- X.genes[rownames(Y.genes),]
X.mirna <- X.mirna[rownames(Y.mirna),]
X.methyl <- X.methyl[rownames(Y.methyl),]
X.prot <- X.prot[rownames(Y.prot),]
########
# SAVE #
########
setwd("D:/Pedro/Mega/Doctorado/Otros proyectos/Data/TCGA Breast MO/")
save(file = "X.clinical.RData", X.clinical)
save(file = "Y.clinical.RData", Y.clinical)
XY.clinical = cbind(X.clinical,Y.clinical)
XY.clinical$event <- factor(XY.clinical$event, levels = c("FALSE", "TRUE"))
save(file = "XY.clinical.RData", XY.clinical)
# ### LOAD YOUR NEW DATA
load("D:/Pedro/Mega/Doctorado/Otros proyectos/Data/TCGA Breast MO/4.Exploratoy_Analysis/ExploratoryAnalysis.output.RData")
newX <- cbind(as.data.frame(LST_VAR$Data$d.cual.binary), as.data.frame(LST_VAR$Data$d.num))
newX[1:5,]
# t2_pat <- RES_PCA_T2$Data$lst_outlier$`0.999`$ID
# ## SSR
# rss_pat <- RES_PCA_RSS$Data$lst_outlier$`0.999`$ID
#
# to_delete <- unique(c(t2_pat, rss_pat))
#
# newX <- newX[!rownames(X) %in% to_delete,]
# newY <- Y.clinical[rownames(Y.clinical) %in% rownames(newX),]
# newX <- newX[rownames(newY),]
#
newY <- Y.clinical[rownames(Y.clinical) %in% rownames(newX),]
X.clinical <- newX[,!colnames(newX) %in% colnames(newY)]
colnames(X.clinical)
dim(newY)
dim(X.clinical)
# t2_pat <- RES_PCA_T2$Data$lst_outlier$`0.999`$ID
# ## SSR
# rss_pat <- RES_PCA_RSS$Data$lst_outlier$`0.999`$ID
#
# to_delete <- unique(c(t2_pat, rss_pat))
#
# newX <- newX[!rownames(X) %in% to_delete,]
# newY <- Y.clinical[rownames(Y.clinical) %in% rownames(newX),]
# newX <- newX[rownames(newY),]
#
Y.clinical <- Y.clinical[rownames(Y.clinical) %in% rownames(newX),]
X.clinical <- newX[,!colnames(newX) %in% colnames(Y.clinical)]
dim(Y.clinical)
dim(X.clinical)
all(rownames(X.clinical) %in% rownames(Y.clinical))
X <- X.clinical
Y <- Y.clinical
save(file = "data_breast.clinical.RData", list = c("X", "Y"))
X <- X.genes
Y <- Y.genes
save(file = "data_breast.genes.RData", list = c("X", "Y"))
X <- X.mirna
Y <- Y.mirna
save(file = "data_breast.mirna.RData", list = c("X", "Y"))
X <- X.methyl
Y <- Y.methyl
save(file = "data_breast.methylation.RData", list = c("X", "Y"))
X <- X.prot
Y <- Y.prot
save(file = "data_breast.proteins.RData", list = c("X", "Y"))
save(file = "data_breast.mo.RData", list = c("X.clinical", "Y.clinical", "X.genes", "Y.genes", "X.mirna", "Y.mirna", "X.prot", "Y.prot"))
save(file = "data_breast.mo.full.RData", list = c("X.clinical", "Y.clinical", "X.genes", "Y.genes", "X.mirna", "Y.mirna", "X.methyl", "Y.methyl","X.prot", "Y.prot"))
dim(X.genes)
dim(X.prot)
dim(X.methyl)
